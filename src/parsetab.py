
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unitADD AND ANDASSIGN ARROW ASSIGN AUTO BREAK B_AND B_NOT B_OR B_XOR CASE CCP CHAR CHAR_CONST COLON COMMA COMMENT CONST CONTINUE CP CSP DECREMENT DEFAULT DIVASSIGN DIVIDE DO DOT DOUBLE ELLIPSIS ELSE ENUM EQUAL EXPONENT EXTERN FLOAT FOR GEQ GOTO GT ID IF INCLUDE INCREMENT INT LEQ LONG LSASSIGN LSHIFT LT MINUSASSIGN MOD MODASSIGN MULASSIGN MULTIPLY NEQ NEWLINE NOT NUMBER OCP OP OR ORASSIGN OSP PLUSASSIGN REGISTER RETURN RSASSIGN RSHIFT SEMICOLON SHORT SIGNED SIZEOF STATIC STRING STRUCT SUBTRACT SWITCH TERNARYOP TYPEDEF TYPE_NAME UNION UNSIGNED VOID VOLATILE WHILE XOR XORASSIGN\n    primary_expression : ID\n\t                    | CHAR_CONST\n                        | NUMBER\n\t                    | OP expression CP\n    \n    postfix_expression : primary_expression\n\t                    | postfix_expression OSP expression CSP\n                        | postfix_expression OP CP\n                        | postfix_expression OP argument_expression_list CP\n                        | postfix_expression DOT ID\n                        | postfix_expression ARROW ID\n                        | postfix_expression INCREMENT\n                        | postfix_expression DECREMENT\n    \n    argument_expression_list : assignment_expression\n                            | argument_expression_list COMMA assignment_expression\n    \n    unary_expression : postfix_expression\n                        | INCREMENT unary_expression\n                        | DECREMENT unary_expression\n                        | unary_operator cast_expression\n                        | SIZEOF unary_expression\n                        | SIZEOF OP type_name CP\n    \n    unary_operator : B_AND\n                | MULTIPLY\n                    | ADD\n                    | SUBTRACT\n                    | B_NOT\n                    | NOT\n    \n    cast_expression : unary_expression\n                    | OP type_name CP cast_expression\n    \n    multiplicative_expression : cast_expression\n                            | multiplicative_expression MULTIPLY cast_expression\n                            | multiplicative_expression DIVIDE cast_expression\n                            | multiplicative_expression MOD cast_expression\n    \n    additive_expression : multiplicative_expression \n                        | additive_expression ADD multiplicative_expression\n                        | additive_expression SUBTRACT multiplicative_expression\n    \n    shift_expression : additive_expression\n                    | shift_expression LSHIFT additive_expression\n                    | shift_expression RSHIFT additive_expression\n    \n    relational_expression : shift_expression\n                            | relational_expression LT shift_expression\n                            | relational_expression GT shift_expression\n                            | relational_expression LEQ shift_expression\n                            | relational_expression GEQ shift_expression\n    \n    equality_expression : relational_expression\n                        | equality_expression EQUAL relational_expression\n                        | equality_expression NEQ relational_expression\n    \n    and_expression : equality_expression\n                    | and_expression B_AND equality_expression\n    \n    exclusive_or_expression : and_expression\n                            | exclusive_or_expression XOR and_expression\n    \n    inclusive_or_expression : exclusive_or_expression\n                            | inclusive_or_expression B_OR exclusive_or_expression\n    \n    logical_and_expression : inclusive_or_expression\n                           | logical_and_expression AND inclusive_or_expression\n    \n    logical_or_expression : logical_and_expression\n                          | logical_or_expression OR logical_and_expression\n    \n    conditional_expression : logical_or_expression\n                           | logical_or_expression TERNARYOP expression COLON conditional_expression\n    \n    assignment_expression : conditional_expression\n                          | unary_expression assignment_operator assignment_expression    \n    \n    assignment_operator : ASSIGN\n                        | MULASSIGN\n                        | DIVASSIGN\n                        | MODASSIGN\n                        | PLUSASSIGN\n                        | MINUSASSIGN\n                        | LSASSIGN\n                        | RSASSIGN\n                        | ANDASSIGN\n                        | XORASSIGN\n                        | ORASSIGN\n    \n    expression : assignment_expression\n               | expression COMMA assignment_expression\n    \n    constant_expression : conditional_expression\n    \n    declaration : declaration_specifiers SEMICOLON\n\t            | declaration_specifiers init_declarator_list SEMICOLON\n    \n    declaration_specifiers : storage_class_specifier\n                           | storage_class_specifier declaration_specifiers\n                           | type_specifier\n                           | type_specifier declaration_specifiers\n                           | type_qualifier\n                           | type_qualifier declaration_specifiers\n    \n    init_declarator_list : init_declarator\n                         | init_declarator_list COMMA init_declarator\n    \n    init_declarator : declarator\n                    | declarator ASSIGN initializer\n    \n    storage_class_specifier : TYPEDEF\n                            | EXTERN\n                            | STATIC\n                            | AUTO\n                            | REGISTER\n    \n    type_specifier  : VOID\n                    | CHAR\n                    | SHORT\n                    | INT\n                    | LONG\n                    | FLOAT\n                    | DOUBLE\n                    | SIGNED\n                    | UNSIGNED\n                    | struct_or_union_specifier\n                    | enum_specifier\n                    | TYPE_NAME\n    \n    struct_or_union_specifier : struct_or_union ID OCP struct_declaration_list CCP\n                              | struct_or_union OCP struct_declaration_list CCP\n                              | struct_or_union ID\n    \n    struct_or_union : STRUCT\n                    | UNION\n    \n    struct_declaration_list : struct_declaration\n                            | struct_declaration_list struct_declaration\n    \n    struct_declaration : specifier_qualifier_list struct_declarator_list SEMICOLON\n    \n    specifier_qualifier_list : type_specifier specifier_qualifier_list\n                             | type_specifier\n                             | type_qualifier specifier_qualifier_list\n                             | type_qualifier\n    \n    struct_declarator_list : struct_declarator\n                           | struct_declarator_list COMMA struct_declarator\n    \n    struct_declarator : declarator\n                      | COLON constant_expression\n                      | declarator COLON constant_expression\n    \n    enum_specifier : ENUM OCP enumerator_list CCP\n                   | ENUM ID OCP enumerator_list CCP\n                   | ENUM ID\n    \n    enumerator_list : enumerator\n                    | enumerator_list COMMA enumerator\n    \n    enumerator : ID\n               | ID ASSIGN constant_expression\n    \n    type_qualifier : CONST\n                   | VOLATILE\n    \n    declarator : pointer direct_declarator\n               | direct_declarator\n    \n    direct_declarator : ID\n                      | OP declarator CP\n                      | direct_declarator OSP constant_expression CSP\n                      | direct_declarator OSP CSP\n                      | direct_declarator OP parameter_type_list CP\n                      | direct_declarator OP identifier_list CP\n                      | direct_declarator OP CP\n    \n    pointer : MULTIPLY\n            | MULTIPLY type_qualifier_list\n            | MULTIPLY pointer\n            | MULTIPLY type_qualifier_list pointer\n    \n    type_qualifier_list : type_qualifier\n                        | type_qualifier_list type_qualifier\n    \n    parameter_type_list : parameter_list\n                        | parameter_list COMMA ELLIPSIS\n    \n    parameter_list : parameter_declaration\n                   | parameter_list COMMA parameter_declaration\n    \n    parameter_declaration : declaration_specifiers declarator\n                          | declaration_specifiers abstract_declarator\n                          | declaration_specifiers\n    \n    identifier_list : ID\n                    | identifier_list COMMA ID\n    \n    type_name : specifier_qualifier_list\n              | specifier_qualifier_list abstract_declarator\n    \n    abstract_declarator : pointer\n                        | direct_abstract_declarator\n                        | pointer direct_abstract_declarator\n    \n    direct_abstract_declarator : OP abstract_declarator CP\n                               | OSP CSP\n                               | OSP constant_expression CSP\n                               | direct_abstract_declarator OSP CSP\n                               | direct_abstract_declarator OSP constant_expression CSP\n                               | OP CP\n                               | OP parameter_type_list CP\n                               | direct_abstract_declarator OP CP\n                               | direct_abstract_declarator OP parameter_type_list CP\n    \n    initializer : assignment_expression\n                | OCP initializer_list CCP\n                | OCP initializer_list COMMA CSP\n    \n    initializer_list : initializer\n                     | initializer_list COMMA initializer\n    \n    statement : labeled_statement\n              | compound_statement\n              | expression_statement\n              | selection_statement\n              | iteration_statement\n              | jump_statement\n    \n    labeled_statement : ID COLON statement\n                      | CASE constant_expression COLON statement\n                      | DEFAULT COLON statement\n    \n    compound_statement : OCP CCP\n                       | OCP statement_list CCP\n                       | OCP declaration_list CCP\n                       | OCP declaration_list statement_list CCP\n    \n    declaration_list : declaration\n                     | declaration_list declaration\n    \n    statement_list : statement\n                   | statement_list statement\n    \n    expression_statement : SEMICOLON\n                         | expression SEMICOLON\n    \n    selection_statement : IF OP expression CP statement\n                        | IF OP expression CP statement ELSE statement\n                        | SWITCH OP expression CP statement\n    \n    iteration_statement : WHILE OP expression CP statement \n                        | DO statement WHILE OP expression CP SEMICOLON\n                        | FOR OP expression_statement expression_statement CP statement\n                        | FOR OP expression_statement expression_statement expression CP statement\n    \n    jump_statement : GOTO ID SEMICOLON\n                   | CONTINUE SEMICOLON\n                   | BREAK SEMICOLON\n                   | RETURN SEMICOLON\n                   | RETURN expression SEMICOLON\n    \n    translation_unit : external_declaration\n                     | translation_unit external_declaration\n    \n    external_declaration : function_definition\n                         | declaration\n    \n    function_definition : declaration_specifiers declarator declaration_list compound_statement\n                        | declaration_specifiers declarator compound_statement\n                        | declarator declaration_list compound_statement\n                        | declarator compound_statement\n    '
    
_lr_action_items = {'TYPEDEF':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,124,130,138,149,154,156,219,220,221,223,228,231,239,245,255,294,300,307,],[12,12,-204,-206,-207,12,12,12,12,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,12,-75,12,-211,-186,12,-130,12,-106,-123,12,-209,-76,-210,-187,-182,12,-135,-138,-133,-208,-183,-184,-134,-136,-137,12,12,-105,-121,-185,12,12,-104,-122,]),'EXTERN':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,124,130,138,149,154,156,219,220,221,223,228,231,239,245,255,294,300,307,],[13,13,-204,-206,-207,13,13,13,13,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,13,-75,13,-211,-186,13,-130,13,-106,-123,13,-209,-76,-210,-187,-182,13,-135,-138,-133,-208,-183,-184,-134,-136,-137,13,13,-105,-121,-185,13,13,-104,-122,]),'STATIC':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,124,130,138,149,154,156,219,220,221,223,228,231,239,245,255,294,300,307,],[14,14,-204,-206,-207,14,14,14,14,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,14,-75,14,-211,-186,14,-130,14,-106,-123,14,-209,-76,-210,-187,-182,14,-135,-138,-133,-208,-183,-184,-134,-136,-137,14,14,-105,-121,-185,14,14,-104,-122,]),'AUTO':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,124,130,138,149,154,156,219,220,221,223,228,231,239,245,255,294,300,307,],[15,15,-204,-206,-207,15,15,15,15,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,15,-75,15,-211,-186,15,-130,15,-106,-123,15,-209,-76,-210,-187,-182,15,-135,-138,-133,-208,-183,-184,-134,-136,-137,15,15,-105,-121,-185,15,15,-104,-122,]),'REGISTER':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,61,62,63,65,67,68,69,71,124,130,138,149,154,156,219,220,221,223,228,231,239,245,255,294,300,307,],[16,16,-204,-206,-207,16,16,16,16,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,16,-75,16,-211,-186,16,-130,16,-106,-123,16,-209,-76,-210,-187,-182,16,-135,-138,-133,-208,-183,-184,-134,-136,-137,16,16,-105,-121,-185,16,16,-104,-122,]),'VOID':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[17,17,-204,-206,-207,17,17,17,17,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,17,-75,17,-211,-186,17,-130,17,-106,17,-123,17,-209,-76,-210,-187,-182,17,17,-135,17,-138,-133,17,17,-109,17,17,-208,-183,-184,17,-134,-136,-137,17,17,17,-105,-110,-121,-185,17,17,-104,-111,-122,]),'CHAR':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[18,18,-204,-206,-207,18,18,18,18,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,18,-75,18,-211,-186,18,-130,18,-106,18,-123,18,-209,-76,-210,-187,-182,18,18,-135,18,-138,-133,18,18,-109,18,18,-208,-183,-184,18,-134,-136,-137,18,18,18,-105,-110,-121,-185,18,18,-104,-111,-122,]),'SHORT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[19,19,-204,-206,-207,19,19,19,19,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,19,-75,19,-211,-186,19,-130,19,-106,19,-123,19,-209,-76,-210,-187,-182,19,19,-135,19,-138,-133,19,19,-109,19,19,-208,-183,-184,19,-134,-136,-137,19,19,19,-105,-110,-121,-185,19,19,-104,-111,-122,]),'INT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[20,20,-204,-206,-207,20,20,20,20,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,20,-75,20,-211,-186,20,-130,20,-106,20,-123,20,-209,-76,-210,-187,-182,20,20,-135,20,-138,-133,20,20,-109,20,20,-208,-183,-184,20,-134,-136,-137,20,20,20,-105,-110,-121,-185,20,20,-104,-111,-122,]),'LONG':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[21,21,-204,-206,-207,21,21,21,21,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,21,-75,21,-211,-186,21,-130,21,-106,21,-123,21,-209,-76,-210,-187,-182,21,21,-135,21,-138,-133,21,21,-109,21,21,-208,-183,-184,21,-134,-136,-137,21,21,21,-105,-110,-121,-185,21,21,-104,-111,-122,]),'FLOAT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[22,22,-204,-206,-207,22,22,22,22,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,22,-75,22,-211,-186,22,-130,22,-106,22,-123,22,-209,-76,-210,-187,-182,22,22,-135,22,-138,-133,22,22,-109,22,22,-208,-183,-184,22,-134,-136,-137,22,22,22,-105,-110,-121,-185,22,22,-104,-111,-122,]),'DOUBLE':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[23,23,-204,-206,-207,23,23,23,23,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,23,-75,23,-211,-186,23,-130,23,-106,23,-123,23,-209,-76,-210,-187,-182,23,23,-135,23,-138,-133,23,23,-109,23,23,-208,-183,-184,23,-134,-136,-137,23,23,23,-105,-110,-121,-185,23,23,-104,-111,-122,]),'SIGNED':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[24,24,-204,-206,-207,24,24,24,24,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,24,-75,24,-211,-186,24,-130,24,-106,24,-123,24,-209,-76,-210,-187,-182,24,24,-135,24,-138,-133,24,24,-109,24,24,-208,-183,-184,24,-134,-136,-137,24,24,24,-105,-110,-121,-185,24,24,-104,-111,-122,]),'UNSIGNED':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[25,25,-204,-206,-207,25,25,25,25,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,25,-75,25,-211,-186,25,-130,25,-106,25,-123,25,-209,-76,-210,-187,-182,25,25,-135,25,-138,-133,25,25,-109,25,25,-208,-183,-184,25,-134,-136,-137,25,25,25,-105,-110,-121,-185,25,25,-104,-111,-122,]),'TYPE_NAME':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[28,28,-204,-206,-207,28,28,28,28,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,28,-75,28,-211,-186,28,-130,28,-106,28,-123,28,-209,-76,-210,-187,-182,28,28,-135,28,-138,-133,28,28,-109,28,28,-208,-183,-184,28,-134,-136,-137,28,28,28,-105,-110,-121,-185,28,28,-104,-111,-122,]),'CONST':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,39,40,43,44,45,46,51,53,54,56,58,59,61,62,63,65,67,68,69,71,85,124,127,130,137,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[29,29,-204,-206,-207,29,29,29,29,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,29,-132,-205,29,-75,29,-211,-186,29,-130,29,29,-143,-106,29,-123,29,-209,-76,-210,-187,-182,29,29,-135,29,-138,-144,-133,29,29,-109,29,29,-208,-183,-184,29,-134,-136,-137,29,29,29,-105,-110,-121,-185,29,29,-104,-111,-122,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,39,40,43,44,45,46,51,53,54,56,58,59,61,62,63,65,67,68,69,71,85,124,127,130,137,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[30,30,-204,-206,-207,30,30,30,30,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,30,-132,-205,30,-75,30,-211,-186,30,-130,30,30,-143,-106,30,-123,30,-209,-76,-210,-187,-182,30,30,-135,30,-138,-144,-133,30,30,-109,30,30,-208,-183,-184,30,-134,-136,-137,30,30,30,-105,-110,-121,-185,30,30,-104,-111,-122,]),'MULTIPLY':([0,1,2,3,4,5,7,8,9,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,38,40,44,45,46,47,48,49,50,52,54,56,58,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,96,98,99,100,101,102,103,105,106,107,108,109,110,111,113,114,121,126,127,128,135,137,142,143,144,149,152,154,155,156,157,158,160,161,162,163,166,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,228,229,231,236,237,238,239,241,245,246,247,248,251,252,255,259,260,261,266,269,270,284,285,286,287,288,293,300,302,303,307,309,310,311,312,313,314,315,316,317,318,319,320,321,333,334,335,337,343,345,346,347,348,349,],[31,31,-204,-206,-207,31,-77,-79,-81,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,31,31,-205,-75,-211,-186,107,31,-78,-80,-82,107,31,-143,-106,-123,-209,107,-76,31,-210,-187,-182,107,107,-188,-173,-174,-175,-176,-177,-178,-190,-1,107,107,107,107,-27,-15,107,107,107,-29,107,-5,-21,-22,-23,-24,-25,-26,-2,-3,216,-27,107,-1,31,-144,31,-113,-115,-208,107,-183,-189,-184,107,107,107,-191,107,107,31,107,107,107,-200,-201,-202,107,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,107,107,107,107,-11,-12,-16,107,-17,-18,-19,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,31,107,-105,107,-112,-114,-121,107,-185,-179,107,-181,-4,107,31,107,-199,-203,-7,-9,-10,216,216,-30,-31,-32,107,-104,31,107,-122,107,-180,107,-28,107,107,107,107,107,-6,-8,107,-20,-192,-194,-195,107,107,-197,107,-193,-196,-198,]),'ID':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,40,44,45,46,47,48,49,50,52,53,54,55,56,58,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,90,93,99,100,101,103,106,107,108,109,110,111,127,135,136,137,142,143,144,148,149,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,222,226,228,229,231,236,237,238,239,240,241,245,246,247,248,252,259,260,261,293,300,302,303,307,309,310,311,313,314,315,316,317,320,333,334,335,337,343,345,346,347,348,349,],[32,32,-204,-206,-207,32,-77,-79,-81,32,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-139,32,58,61,-107,-108,-205,-75,-211,-186,80,32,-78,-80,-82,128,133,-140,-141,-143,-106,147,-123,-209,128,-76,32,-210,-187,-182,80,80,-188,-173,-174,-175,-176,-177,-178,-190,128,128,80,171,128,128,128,128,128,-21,-22,-23,-24,-25,-26,128,32,-142,-144,32,-113,-115,147,-208,128,-183,-189,-184,80,80,80,-191,128,128,128,128,128,-200,-201,-202,128,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,128,128,128,128,269,270,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,289,32,32,128,-105,128,-112,-114,-121,147,128,-185,-179,80,-181,128,128,-199,-203,128,-104,32,128,-122,128,-180,80,80,80,128,128,128,128,-192,-194,-195,80,80,-197,80,-193,-196,-198,]),'OP':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,38,40,44,45,46,47,48,49,50,51,52,54,55,56,58,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,86,87,88,89,93,98,99,100,101,103,105,106,107,108,109,110,111,113,114,124,127,128,130,135,136,137,138,142,143,144,149,152,154,155,156,157,158,160,161,162,163,166,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,226,227,228,229,231,236,237,238,239,241,245,246,247,248,251,252,254,255,258,259,260,261,266,269,270,292,293,295,298,300,302,303,307,309,310,311,313,314,315,316,317,318,319,320,322,324,326,327,328,333,334,335,337,341,342,343,345,346,347,348,349,],[33,33,-204,-206,-207,33,-77,-79,-81,33,53,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-139,-132,33,-205,-75,-211,-186,85,33,-78,-80,-82,53,127,-140,-141,-143,-106,-123,-209,85,-76,33,-210,-187,-182,85,85,-188,-173,-174,-175,-176,-177,-178,-190,-1,127,163,85,167,168,85,170,85,191,197,197,127,201,-5,-21,-22,-23,-24,-25,-26,-2,-3,-135,85,-1,-138,228,-142,-144,-133,33,-113,-115,-208,85,-183,-189,-184,85,85,85,-191,85,85,255,85,85,85,-200,-201,-202,85,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,85,127,85,85,-11,-12,85,85,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,-134,-136,-137,228,294,228,127,-105,127,-112,-114,-121,127,-185,-179,85,-181,-4,127,255,255,315,85,-199,-203,-7,-9,-10,294,127,-164,-160,-104,33,127,-122,85,-180,85,85,85,85,85,127,-6,-8,85,-162,-166,-159,-165,-161,-192,-194,-195,85,-163,-167,85,-197,85,-193,-196,-198,]),'ENUM':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[35,35,-204,-206,-207,35,35,35,35,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,35,-75,35,-211,-186,35,-130,35,-106,35,-123,35,-209,-76,-210,-187,-182,35,35,-135,35,-138,-133,35,35,-109,35,35,-208,-183,-184,35,-134,-136,-137,35,35,35,-105,-110,-121,-185,35,35,-104,-111,-122,]),'STRUCT':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[36,36,-204,-206,-207,36,36,36,36,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,36,-75,36,-211,-186,36,-130,36,-106,36,-123,36,-209,-76,-210,-187,-182,36,36,-135,36,-138,-133,36,36,-109,36,36,-208,-183,-184,36,-134,-136,-137,36,36,36,-105,-110,-121,-185,36,36,-104,-111,-122,]),'UNION':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,38,39,40,43,44,45,46,51,53,58,59,61,62,63,65,67,68,69,71,85,124,127,130,138,139,140,141,143,144,149,154,156,201,219,220,221,223,228,230,231,232,239,245,255,294,300,301,307,],[37,37,-204,-206,-207,37,37,37,37,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-205,37,-75,37,-211,-186,37,-130,37,-106,37,-123,37,-209,-76,-210,-187,-182,37,37,-135,37,-138,-133,37,37,-109,37,37,-208,-183,-184,37,-134,-136,-137,37,37,37,-105,-110,-121,-185,37,37,-104,-111,-122,]),'$end':([1,2,3,4,38,40,44,63,65,67,69,149,154,156,245,],[0,-204,-206,-207,-205,-75,-211,-209,-76,-210,-182,-208,-183,-184,-185,]),'SEMICOLON':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,39,40,41,42,45,46,47,48,49,50,51,58,61,65,68,69,70,71,72,73,74,75,76,77,78,79,80,83,88,91,92,93,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,124,125,126,128,130,138,150,151,153,154,155,156,157,158,160,161,170,171,172,173,174,175,194,195,196,198,199,200,219,220,221,231,233,234,235,239,245,246,247,248,249,251,259,260,261,262,264,266,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,300,304,307,308,310,311,312,313,314,318,319,321,329,330,331,333,334,335,337,339,343,344,345,346,347,348,349,],[40,-77,-79,-81,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-85,-75,65,-83,-186,79,40,-78,-80,-82,-130,-106,-123,-76,-187,-182,79,79,-188,-173,-174,-175,-176,-177,-178,-190,-1,161,79,172,173,174,-72,-59,-27,-57,-15,-29,-55,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,-85,-135,-74,-27,-1,-138,-133,-86,-168,-84,-183,-189,-184,79,79,79,-191,79,260,-200,-201,-202,261,-11,-12,-16,-17,-18,-19,-134,-136,-137,-105,301,-116,-118,-121,-185,-179,79,-181,-73,-4,79,-199,-203,-60,-56,-7,-9,-10,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-104,-119,-122,-169,-180,79,-28,79,79,-6,-8,-20,-117,-120,-170,-192,-194,-195,79,-58,79,348,-197,79,-193,-196,-198,]),'OCP':([6,11,32,34,35,36,37,39,40,43,45,46,51,58,61,62,64,65,68,69,70,71,72,73,74,75,76,77,78,79,88,124,130,138,152,154,155,156,157,158,160,161,172,173,174,219,220,221,245,246,247,248,260,261,309,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[46,-131,-132,59,60,-107,-108,46,-75,46,-186,46,-130,139,148,46,152,-76,-187,-182,46,46,-188,-173,-174,-175,-176,-177,-178,-190,46,-135,-138,-133,152,-183,-189,-184,46,46,46,-191,-200,-201,-202,-134,-136,-137,-185,-179,46,-181,-199,-203,152,-180,46,46,46,-192,-194,-195,46,46,-197,46,-193,-196,-198,]),'OSP':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,48,49,50,51,54,55,56,58,61,80,98,105,113,114,124,128,130,135,136,137,138,143,144,166,194,195,219,220,221,226,227,228,231,237,238,239,251,254,255,266,269,270,292,295,298,300,307,318,319,322,324,326,327,328,341,342,],[-77,-79,-81,52,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-139,-132,-78,-80,-82,52,-140,-141,-143,-106,-123,-1,190,-5,-2,-3,-135,-1,-138,229,-142,-144,-133,-113,-115,229,-11,-12,-134,-136,-137,229,293,229,-105,-112,-114,-121,-4,229,229,-7,-9,-10,293,-164,-160,-104,-122,-6,-8,-162,-166,-159,-165,-161,-163,-167,]),'COMMA':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,41,42,48,49,50,51,54,55,56,58,61,80,83,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,122,124,125,126,128,130,131,132,133,134,135,136,137,138,145,146,147,150,151,153,164,175,194,195,196,198,199,200,219,220,221,224,225,226,227,231,233,234,235,239,242,243,244,249,250,251,256,257,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,295,298,300,304,305,306,307,308,312,318,319,321,322,324,326,327,328,329,330,331,332,336,338,339,340,341,342,],[-77,-79,-81,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-139,-132,-85,66,-83,-78,-80,-82,-130,-140,-141,-143,-106,-123,-1,162,-72,-59,-27,-57,-15,-29,-55,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,-85,-135,-74,-27,-1,-138,222,223,-152,-147,-151,-142,-144,-133,240,-124,-126,-86,-168,-84,162,162,-11,-12,-16,-17,-18,-19,-134,-136,-137,-149,-150,-156,-157,-105,302,-116,-118,-121,240,309,-171,-73,162,-4,162,162,-60,162,-56,162,-7,320,-13,-9,-10,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-153,-148,-158,-164,-160,-104,-119,-125,-127,-122,-169,-28,-6,-8,-20,-162,-166,-159,-165,-161,-117,-120,-170,-172,162,162,-58,-14,-163,-167,]),'CP':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,48,49,50,51,53,54,55,56,57,58,61,79,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,124,126,128,129,130,131,132,133,134,135,136,137,138,143,144,161,164,165,166,191,194,195,196,198,199,200,219,220,221,224,225,226,227,228,231,237,238,239,249,250,251,253,254,255,256,257,262,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,300,307,312,316,318,319,321,322,324,325,326,327,328,336,338,339,340,341,342,],[-77,-79,-81,-131,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-139,-132,-78,-80,-82,-130,130,-140,-141,-143,138,-106,-123,-190,-72,-59,-27,-57,-15,-29,-55,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,-135,-27,-1,220,-138,221,-145,-152,-147,-151,-142,-144,-133,-113,-115,-191,251,252,-154,266,-11,-12,-16,-17,-18,-19,-134,-136,-137,-149,-150,-156,-157,295,-105,-112,-114,-121,-73,311,-4,-155,-156,295,313,314,-60,-56,-7,319,-13,-9,-10,321,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-153,-146,-148,-158,324,-164,326,327,-160,-104,-122,-28,337,-6,-8,-20,-162,-166,342,-159,-165,-161,344,346,-58,-14,-163,-167,]),'ASSIGN':([11,32,39,51,80,96,98,105,113,114,122,124,126,128,130,138,147,194,195,196,198,199,200,219,220,221,251,266,269,270,312,318,319,321,],[-131,-132,64,-130,-1,177,-15,-5,-2,-3,64,-135,-27,-1,-138,-133,241,-11,-12,-16,-17,-18,-19,-134,-136,-137,-4,-7,-9,-10,-28,-6,-8,-20,]),'COLON':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,51,58,61,80,82,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,124,125,126,128,130,138,142,143,144,159,194,195,196,198,199,200,219,220,221,231,235,237,238,239,249,251,262,263,264,266,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,300,302,307,312,318,319,321,339,],[-131,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-128,-129,-132,-130,-106,-123,158,160,-72,-59,-27,-57,-15,-29,-55,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,-135,-74,-27,-1,-138,-133,236,-113,-115,247,-11,-12,-16,-17,-18,-19,-134,-136,-137,-105,303,-112,-114,-121,-73,-4,-60,317,-56,-7,-9,-10,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-104,236,-122,-28,-6,-8,-20,-58,]),'CCP':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,125,126,128,140,141,145,146,147,151,154,155,156,157,161,172,173,174,194,195,196,198,199,200,230,232,242,243,244,245,246,248,251,260,261,262,264,266,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,301,305,306,308,310,312,318,319,321,331,332,333,334,335,339,345,347,348,349,],[-75,-186,69,-76,-187,-182,154,156,-188,-173,-174,-175,-176,-177,-178,-190,-59,-27,-57,-15,-29,-55,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,-74,-27,-1,231,-109,239,-124,-126,-168,-183,-189,-184,245,-191,-200,-201,-202,-11,-12,-16,-17,-18,-19,300,-110,307,308,-171,-185,-179,-181,-4,-199,-203,-60,-56,-7,-9,-10,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-111,-125,-127,-169,-180,-28,-6,-8,-20,-170,-172,-192,-194,-195,-58,-197,-193,-196,-198,]),'CASE':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,81,-76,-187,-182,81,81,-188,-173,-174,-175,-176,-177,-178,-190,81,-183,-189,-184,81,81,81,-191,-200,-201,-202,-185,-179,81,-181,-199,-203,-180,81,81,81,-192,-194,-195,81,81,-197,81,-193,-196,-198,]),'DEFAULT':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,82,-76,-187,-182,82,82,-188,-173,-174,-175,-176,-177,-178,-190,82,-183,-189,-184,82,82,82,-191,-200,-201,-202,-185,-179,82,-181,-199,-203,-180,82,82,82,-192,-194,-195,82,82,-197,82,-193,-196,-198,]),'IF':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,84,-76,-187,-182,84,84,-188,-173,-174,-175,-176,-177,-178,-190,84,-183,-189,-184,84,84,84,-191,-200,-201,-202,-185,-179,84,-181,-199,-203,-180,84,84,84,-192,-194,-195,84,84,-197,84,-193,-196,-198,]),'SWITCH':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,86,-76,-187,-182,86,86,-188,-173,-174,-175,-176,-177,-178,-190,86,-183,-189,-184,86,86,86,-191,-200,-201,-202,-185,-179,86,-181,-199,-203,-180,86,86,86,-192,-194,-195,86,86,-197,86,-193,-196,-198,]),'WHILE':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,169,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,87,-76,-187,-182,87,87,-188,-173,-174,-175,-176,-177,-178,-190,87,-183,-189,-184,87,87,87,-191,258,-200,-201,-202,-185,-179,87,-181,-199,-203,-180,87,87,87,-192,-194,-195,87,87,-197,87,-193,-196,-198,]),'DO':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,88,-76,-187,-182,88,88,-188,-173,-174,-175,-176,-177,-178,-190,88,-183,-189,-184,88,88,88,-191,-200,-201,-202,-185,-179,88,-181,-199,-203,-180,88,88,88,-192,-194,-195,88,88,-197,88,-193,-196,-198,]),'FOR':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,89,-76,-187,-182,89,89,-188,-173,-174,-175,-176,-177,-178,-190,89,-183,-189,-184,89,89,89,-191,-200,-201,-202,-185,-179,89,-181,-199,-203,-180,89,89,89,-192,-194,-195,89,89,-197,89,-193,-196,-198,]),'GOTO':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,90,-76,-187,-182,90,90,-188,-173,-174,-175,-176,-177,-178,-190,90,-183,-189,-184,90,90,90,-191,-200,-201,-202,-185,-179,90,-181,-199,-203,-180,90,90,90,-192,-194,-195,90,90,-197,90,-193,-196,-198,]),'CONTINUE':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,91,-76,-187,-182,91,91,-188,-173,-174,-175,-176,-177,-178,-190,91,-183,-189,-184,91,91,91,-191,-200,-201,-202,-185,-179,91,-181,-199,-203,-180,91,91,91,-192,-194,-195,91,91,-197,91,-193,-196,-198,]),'BREAK':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,92,-76,-187,-182,92,92,-188,-173,-174,-175,-176,-177,-178,-190,92,-183,-189,-184,92,92,92,-191,-200,-201,-202,-185,-179,92,-181,-199,-203,-180,92,92,92,-192,-194,-195,92,92,-197,92,-193,-196,-198,]),'RETURN':([40,45,46,65,68,69,70,71,72,73,74,75,76,77,78,79,88,154,155,156,157,158,160,161,172,173,174,245,246,247,248,260,261,310,311,313,314,333,334,335,337,343,345,346,347,348,349,],[-75,-186,93,-76,-187,-182,93,93,-188,-173,-174,-175,-176,-177,-178,-190,93,-183,-189,-184,93,93,93,-191,-200,-201,-202,-185,-179,93,-181,-199,-203,-180,93,93,93,-192,-194,-195,93,93,-197,93,-193,-196,-198,]),'INCREMENT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,98,99,100,101,103,105,106,107,108,109,110,111,113,114,127,128,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,251,252,259,260,261,266,269,270,293,303,309,310,311,313,314,315,316,317,318,319,320,333,334,335,337,343,345,346,347,348,349,],[-75,-186,99,99,99,-76,-187,-182,99,99,-188,-173,-174,-175,-176,-177,-178,-190,-1,99,99,99,99,194,99,99,99,99,-5,-21,-22,-23,-24,-25,-26,-2,-3,99,-1,99,-183,-189,-184,99,99,99,-191,99,99,99,99,99,-200,-201,-202,99,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,99,99,99,99,-11,-12,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-185,-179,99,-181,-4,99,99,-199,-203,-7,-9,-10,99,99,99,-180,99,99,99,99,99,99,-6,-8,99,-192,-194,-195,99,99,-197,99,-193,-196,-198,]),'DECREMENT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,98,99,100,101,103,105,106,107,108,109,110,111,113,114,127,128,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,251,252,259,260,261,266,269,270,293,303,309,310,311,313,314,315,316,317,318,319,320,333,334,335,337,343,345,346,347,348,349,],[-75,-186,100,100,100,-76,-187,-182,100,100,-188,-173,-174,-175,-176,-177,-178,-190,-1,100,100,100,100,195,100,100,100,100,-5,-21,-22,-23,-24,-25,-26,-2,-3,100,-1,100,-183,-189,-184,100,100,100,-191,100,100,100,100,100,-200,-201,-202,100,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,100,100,100,100,-11,-12,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-185,-179,100,-181,-4,100,100,-199,-203,-7,-9,-10,100,100,100,-180,100,100,100,100,100,100,-6,-8,100,-192,-194,-195,100,100,-197,100,-193,-196,-198,]),'SIZEOF':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,127,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,252,259,260,261,293,303,309,310,311,313,314,315,316,317,320,333,334,335,337,343,345,346,347,348,349,],[-75,-186,103,103,103,-76,-187,-182,103,103,-188,-173,-174,-175,-176,-177,-178,-190,103,103,103,103,103,103,103,103,-21,-22,-23,-24,-25,-26,103,103,-183,-189,-184,103,103,103,-191,103,103,103,103,103,-200,-201,-202,103,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-185,-179,103,-181,103,103,-199,-203,103,103,103,-180,103,103,103,103,103,103,103,-192,-194,-195,103,103,-197,103,-193,-196,-198,]),'B_AND':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,96,98,99,100,101,102,103,105,106,107,108,109,110,111,113,114,116,117,118,119,120,121,126,127,128,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,251,252,259,260,261,266,269,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,293,303,309,310,311,312,313,314,315,316,317,318,319,320,321,333,334,335,337,343,345,346,347,348,349,],[-75,-186,106,106,106,-76,-187,-182,106,106,-188,-173,-174,-175,-176,-177,-178,-190,-1,106,106,106,106,-27,-15,106,106,106,-29,106,-5,-21,-22,-23,-24,-25,-26,-2,-3,205,-47,-44,-39,-36,-33,-27,106,-1,106,-183,-189,-184,106,106,106,-191,106,106,106,106,106,-200,-201,-202,106,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,106,106,106,106,-11,-12,-16,106,-17,-18,-19,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-185,-179,106,-181,-4,106,106,-199,-203,-7,-9,-10,205,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,106,106,106,-180,106,-28,106,106,106,106,106,-6,-8,106,-20,-192,-194,-195,106,106,-197,106,-193,-196,-198,]),'ADD':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,96,98,99,100,101,102,103,105,106,107,108,109,110,111,113,114,120,121,126,127,128,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,251,252,259,260,261,266,269,270,282,283,284,285,286,287,288,293,303,309,310,311,312,313,314,315,316,317,318,319,320,321,333,334,335,337,343,345,346,347,348,349,],[-75,-186,108,108,108,-76,-187,-182,108,108,-188,-173,-174,-175,-176,-177,-178,-190,-1,108,108,108,108,-27,-15,108,108,108,-29,108,-5,-21,-22,-23,-24,-25,-26,-2,-3,214,-33,-27,108,-1,108,-183,-189,-184,108,108,108,-191,108,108,108,108,108,-200,-201,-202,108,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,108,108,108,108,-11,-12,-16,108,-17,-18,-19,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-185,-179,108,-181,-4,108,108,-199,-203,-7,-9,-10,214,214,-34,-35,-30,-31,-32,108,108,108,-180,108,-28,108,108,108,108,108,-6,-8,108,-20,-192,-194,-195,108,108,-197,108,-193,-196,-198,]),'SUBTRACT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,85,88,93,96,98,99,100,101,102,103,105,106,107,108,109,110,111,113,114,120,121,126,127,128,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,251,252,259,260,261,266,269,270,282,283,284,285,286,287,288,293,303,309,310,311,312,313,314,315,316,317,318,319,320,321,333,334,335,337,343,345,346,347,348,349,],[-75,-186,109,109,109,-76,-187,-182,109,109,-188,-173,-174,-175,-176,-177,-178,-190,-1,109,109,109,109,-27,-15,109,109,109,-29,109,-5,-21,-22,-23,-24,-25,-26,-2,-3,215,-33,-27,109,-1,109,-183,-189,-184,109,109,109,-191,109,109,109,109,109,-200,-201,-202,109,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,109,109,109,109,-11,-12,-16,109,-17,-18,-19,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-185,-179,109,-181,-4,109,109,-199,-203,-7,-9,-10,215,215,-34,-35,-30,-31,-32,109,109,109,-180,109,-28,109,109,109,109,109,-6,-8,109,-20,-192,-194,-195,109,109,-197,109,-193,-196,-198,]),'B_NOT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,127,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,252,259,260,261,293,303,309,310,311,313,314,315,316,317,320,333,334,335,337,343,345,346,347,348,349,],[-75,-186,110,110,110,-76,-187,-182,110,110,-188,-173,-174,-175,-176,-177,-178,-190,110,110,110,110,110,110,110,110,-21,-22,-23,-24,-25,-26,110,110,-183,-189,-184,110,110,110,-191,110,110,110,110,110,-200,-201,-202,110,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-185,-179,110,-181,110,110,-199,-203,110,110,110,-180,110,110,110,110,110,110,110,-192,-194,-195,110,110,-197,110,-193,-196,-198,]),'NOT':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,127,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,252,259,260,261,293,303,309,310,311,313,314,315,316,317,320,333,334,335,337,343,345,346,347,348,349,],[-75,-186,111,111,111,-76,-187,-182,111,111,-188,-173,-174,-175,-176,-177,-178,-190,111,111,111,111,111,111,111,111,-21,-22,-23,-24,-25,-26,111,111,-183,-189,-184,111,111,111,-191,111,111,111,111,111,-200,-201,-202,111,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-185,-179,111,-181,111,111,-199,-203,111,111,111,-180,111,111,111,111,111,111,111,-192,-194,-195,111,111,-197,111,-193,-196,-198,]),'CHAR_CONST':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,127,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,252,259,260,261,293,303,309,310,311,313,314,315,316,317,320,333,334,335,337,343,345,346,347,348,349,],[-75,-186,113,113,113,-76,-187,-182,113,113,-188,-173,-174,-175,-176,-177,-178,-190,113,113,113,113,113,113,113,113,-21,-22,-23,-24,-25,-26,113,113,-183,-189,-184,113,113,113,-191,113,113,113,113,113,-200,-201,-202,113,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-185,-179,113,-181,113,113,-199,-203,113,113,113,-180,113,113,113,113,113,113,113,-192,-194,-195,113,113,-197,113,-193,-196,-198,]),'NUMBER':([40,45,46,52,64,65,68,69,70,71,72,73,74,75,76,77,78,79,81,85,88,93,99,100,101,103,106,107,108,109,110,111,127,152,154,155,156,157,158,160,161,162,163,167,168,170,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,245,246,247,248,252,259,260,261,293,303,309,310,311,313,314,315,316,317,320,333,334,335,337,343,345,346,347,348,349,],[-75,-186,114,114,114,-76,-187,-182,114,114,-188,-173,-174,-175,-176,-177,-178,-190,114,114,114,114,114,114,114,114,-21,-22,-23,-24,-25,-26,114,114,-183,-189,-184,114,114,114,-191,114,114,114,114,114,-200,-201,-202,114,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-185,-179,114,-181,114,114,-199,-203,114,114,114,-180,114,114,114,114,114,114,114,-192,-194,-195,114,114,-197,114,-193,-196,-198,]),'CSP':([52,94,95,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,123,125,126,128,194,195,196,198,199,200,229,249,251,262,264,265,266,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,293,299,309,312,318,319,321,323,339,],[124,-72,-59,-27,-57,-15,-29,-55,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,219,-74,-27,-1,-11,-12,-16,-17,-18,-19,298,-73,-4,-60,-56,318,-7,-9,-10,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,322,328,331,-28,-6,-8,-20,341,-58,]),'ELSE':([69,73,74,75,76,77,78,79,154,156,161,172,173,174,245,246,248,260,261,310,333,334,335,345,347,348,349,],[-182,-173,-174,-175,-176,-177,-178,-190,-183,-184,-191,-200,-201,-202,-185,-179,-181,-199,-203,-180,343,-194,-195,-197,-193,-196,-198,]),'DOT':([80,98,105,113,114,128,194,195,251,266,269,270,318,319,],[-1,192,-5,-2,-3,-1,-11,-12,-4,-7,-9,-10,-6,-8,]),'ARROW':([80,98,105,113,114,128,194,195,251,266,269,270,318,319,],[-1,193,-5,-2,-3,-1,-11,-12,-4,-7,-9,-10,-6,-8,]),'MULASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,178,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'DIVASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,179,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'MODASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,180,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'PLUSASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,181,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'MINUSASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,182,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'LSASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,183,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'RSASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,184,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'ANDASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,185,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'XORASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,186,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'ORASSIGN':([80,96,98,105,113,114,126,128,194,195,196,198,199,200,251,266,269,270,312,318,319,321,],[-1,187,-15,-5,-2,-3,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,-28,-6,-8,-20,]),'DIVIDE':([80,96,98,102,105,113,114,121,126,128,194,195,196,198,199,200,251,266,269,270,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,217,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,217,217,-30,-31,-32,-28,-6,-8,-20,]),'MOD':([80,96,98,102,105,113,114,121,126,128,194,195,196,198,199,200,251,266,269,270,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,218,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,218,218,-30,-31,-32,-28,-6,-8,-20,]),'LSHIFT':([80,96,98,102,105,113,114,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,212,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,212,212,212,212,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'RSHIFT':([80,96,98,102,105,113,114,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,213,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,213,213,213,213,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'LT':([80,96,98,102,105,113,114,118,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,208,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,208,208,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'GT':([80,96,98,102,105,113,114,118,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,209,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,209,209,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'LEQ':([80,96,98,102,105,113,114,118,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,210,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,210,210,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'GEQ':([80,96,98,102,105,113,114,118,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,211,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,211,211,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'EQUAL':([80,96,98,102,105,113,114,117,118,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,275,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,206,-44,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,206,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'NEQ':([80,96,98,102,105,113,114,117,118,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,275,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,207,-44,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,207,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'XOR':([80,96,98,102,105,113,114,115,116,117,118,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,-2,-3,204,-49,-47,-44,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,204,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'B_OR':([80,96,98,102,105,112,113,114,115,116,117,118,119,120,121,126,128,194,195,196,198,199,200,251,266,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,-5,203,-2,-3,-51,-49,-47,-44,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-7,-9,-10,203,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'AND':([80,96,98,102,104,105,112,113,114,115,116,117,118,119,120,121,126,128,194,195,196,198,199,200,251,264,266,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,-15,-29,202,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,202,-7,-9,-10,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'TERNARYOP':([80,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,126,128,194,195,196,198,199,200,251,264,266,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,188,-15,-29,-55,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-56,-7,-9,-10,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'OR':([80,96,97,98,102,104,105,112,113,114,115,116,117,118,119,120,121,126,128,194,195,196,198,199,200,251,264,266,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,312,318,319,321,],[-1,-27,189,-15,-29,-55,-5,-53,-2,-3,-51,-49,-47,-44,-39,-36,-33,-27,-1,-11,-12,-16,-17,-18,-19,-4,-56,-7,-9,-10,-54,-52,-50,-48,-45,-46,-40,-41,-42,-43,-37,-38,-34,-35,-30,-31,-32,-28,-6,-8,-20,]),'ELLIPSIS':([223,],[290,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'translation_unit':([0,],[1,]),'external_declaration':([0,1,],[2,38,]),'function_definition':([0,1,],[3,3,]),'declaration':([0,1,6,39,43,46,62,71,],[4,4,45,45,68,45,68,68,]),'declaration_specifiers':([0,1,6,7,8,9,39,43,46,53,62,71,223,228,255,294,],[5,5,47,48,49,50,47,47,47,135,47,47,135,135,135,135,]),'declarator':([0,1,5,33,47,66,135,142,228,302,],[6,6,39,57,122,122,224,235,57,235,]),'storage_class_specifier':([0,1,6,7,8,9,39,43,46,53,62,71,223,228,255,294,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'type_specifier':([0,1,6,7,8,9,39,43,46,53,59,62,71,85,127,139,140,143,144,201,223,228,230,255,294,],[8,8,8,8,8,8,8,8,8,8,143,8,8,143,143,143,143,143,143,143,8,8,143,8,8,]),'type_qualifier':([0,1,6,7,8,9,31,39,43,46,53,54,59,62,71,85,127,139,140,143,144,201,223,228,230,255,294,],[9,9,9,9,9,9,56,9,9,9,9,137,144,9,9,144,144,144,144,144,144,144,9,9,144,9,9,]),'pointer':([0,1,5,31,33,47,54,66,135,142,166,228,255,302,],[10,10,10,55,10,10,136,10,226,10,254,226,254,10,]),'direct_declarator':([0,1,5,10,33,47,66,135,142,226,228,302,],[11,11,11,51,11,11,11,11,11,51,11,11,]),'struct_or_union_specifier':([0,1,6,7,8,9,39,43,46,53,59,62,71,85,127,139,140,143,144,201,223,228,230,255,294,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'enum_specifier':([0,1,6,7,8,9,39,43,46,53,59,62,71,85,127,139,140,143,144,201,223,228,230,255,294,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'struct_or_union':([0,1,6,7,8,9,39,43,46,53,59,62,71,85,127,139,140,143,144,201,223,228,230,255,294,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'init_declarator_list':([5,47,],[41,41,]),'init_declarator':([5,47,66,],[42,42,153,]),'declaration_list':([6,39,46,],[43,62,71,]),'compound_statement':([6,39,43,46,62,70,71,88,157,158,160,247,311,313,314,337,343,346,],[44,63,67,74,149,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'type_qualifier_list':([31,],[54,]),'statement_list':([46,71,],[70,157,]),'statement':([46,70,71,88,157,158,160,247,311,313,314,337,343,346,],[72,155,72,169,155,246,248,310,333,334,335,345,347,349,]),'labeled_statement':([46,70,71,88,157,158,160,247,311,313,314,337,343,346,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'expression_statement':([46,70,71,88,157,158,160,170,247,259,311,313,314,337,343,346,],[75,75,75,75,75,75,75,259,75,316,75,75,75,75,75,75,]),'selection_statement':([46,70,71,88,157,158,160,247,311,313,314,337,343,346,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'iteration_statement':([46,70,71,88,157,158,160,247,311,313,314,337,343,346,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'jump_statement':([46,70,71,88,157,158,160,247,311,313,314,337,343,346,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'expression':([46,70,71,85,88,93,127,157,158,160,163,167,168,170,188,190,197,201,247,259,311,313,314,315,316,337,343,346,],[83,83,83,164,83,175,164,83,83,83,250,256,257,83,263,265,164,164,83,83,83,83,83,336,338,83,83,83,]),'assignment_expression':([46,64,70,71,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,190,191,197,201,247,259,309,311,313,314,315,316,320,337,343,346,],[94,151,94,94,94,94,94,94,151,94,94,94,249,94,94,94,94,262,94,94,268,94,94,94,94,151,94,94,94,94,94,340,94,94,94,]),'conditional_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,190,191,197,201,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[95,125,95,95,95,125,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,125,125,125,95,95,125,125,95,95,95,95,95,95,339,95,95,95,95,]),'unary_expression':([46,52,64,70,71,81,85,88,93,99,100,101,103,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,247,252,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[96,126,96,96,96,126,96,96,96,196,198,126,200,96,96,96,96,96,96,96,96,96,96,96,96,126,96,96,96,96,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,96,126,96,126,126,96,96,96,96,96,96,126,96,96,96,96,]),'logical_or_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,190,191,197,201,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'postfix_expression':([46,52,64,70,71,81,85,88,93,99,100,101,103,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,247,252,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'unary_operator':([46,52,64,70,71,81,85,88,93,99,100,101,103,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,247,252,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'cast_expression':([46,52,64,70,71,81,85,88,93,101,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,247,252,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[102,102,102,102,102,102,102,102,102,199,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,286,287,288,102,102,102,102,312,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'logical_and_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,264,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'primary_expression':([46,52,64,70,71,81,85,88,93,99,100,101,103,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,229,236,241,247,252,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'inclusive_or_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,272,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'exclusive_or_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,273,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'and_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,274,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'equality_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,275,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'relational_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,276,277,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'shift_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,278,279,280,281,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'additive_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,282,283,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'multiplicative_expression':([46,52,64,70,71,81,85,88,93,127,152,157,158,160,162,163,167,168,170,176,188,189,190,191,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,229,236,241,247,259,293,303,309,311,313,314,315,316,317,320,337,343,346,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,284,285,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'constant_expression':([52,81,229,236,241,293,303,],[123,159,299,304,306,323,330,]),'parameter_type_list':([53,228,255,294,],[129,297,297,325,]),'identifier_list':([53,],[131,]),'parameter_list':([53,228,255,294,],[132,132,132,132,]),'parameter_declaration':([53,223,228,255,294,],[134,291,134,134,134,]),'struct_declaration_list':([59,139,],[140,230,]),'struct_declaration':([59,139,140,230,],[141,141,232,232,]),'specifier_qualifier_list':([59,85,127,139,140,143,144,201,230,],[142,166,166,142,142,237,238,166,142,]),'enumerator_list':([60,148,],[145,242,]),'enumerator':([60,148,240,],[146,146,305,]),'initializer':([64,152,309,],[150,244,332,]),'type_name':([85,127,201,],[165,165,271,]),'assignment_operator':([96,],[176,]),'abstract_declarator':([135,166,228,255,],[225,253,296,296,]),'direct_abstract_declarator':([135,166,226,228,254,255,],[227,227,292,227,292,227,]),'struct_declarator_list':([142,],[233,]),'struct_declarator':([142,302,],[234,329,]),'initializer_list':([152,],[243,]),'argument_expression_list':([191,],[267,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','grammar.py',18),
  ('primary_expression -> CHAR_CONST','primary_expression',1,'p_primary_expression','grammar.py',19),
  ('primary_expression -> NUMBER','primary_expression',1,'p_primary_expression','grammar.py',20),
  ('primary_expression -> OP expression CP','primary_expression',3,'p_primary_expression','grammar.py',21),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','grammar.py',27),
  ('postfix_expression -> postfix_expression OSP expression CSP','postfix_expression',4,'p_postfix_expression','grammar.py',28),
  ('postfix_expression -> postfix_expression OP CP','postfix_expression',3,'p_postfix_expression','grammar.py',29),
  ('postfix_expression -> postfix_expression OP argument_expression_list CP','postfix_expression',4,'p_postfix_expression','grammar.py',30),
  ('postfix_expression -> postfix_expression DOT ID','postfix_expression',3,'p_postfix_expression','grammar.py',31),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression','grammar.py',32),
  ('postfix_expression -> postfix_expression INCREMENT','postfix_expression',2,'p_postfix_expression','grammar.py',33),
  ('postfix_expression -> postfix_expression DECREMENT','postfix_expression',2,'p_postfix_expression','grammar.py',34),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','grammar.py',40),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','grammar.py',41),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','grammar.py',47),
  ('unary_expression -> INCREMENT unary_expression','unary_expression',2,'p_unary_expression','grammar.py',48),
  ('unary_expression -> DECREMENT unary_expression','unary_expression',2,'p_unary_expression','grammar.py',49),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','grammar.py',50),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','grammar.py',51),
  ('unary_expression -> SIZEOF OP type_name CP','unary_expression',4,'p_unary_expression','grammar.py',52),
  ('unary_operator -> B_AND','unary_operator',1,'p_unary_operator','grammar.py',58),
  ('unary_operator -> MULTIPLY','unary_operator',1,'p_unary_operator','grammar.py',59),
  ('unary_operator -> ADD','unary_operator',1,'p_unary_operator','grammar.py',60),
  ('unary_operator -> SUBTRACT','unary_operator',1,'p_unary_operator','grammar.py',61),
  ('unary_operator -> B_NOT','unary_operator',1,'p_unary_operator','grammar.py',62),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','grammar.py',63),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','grammar.py',69),
  ('cast_expression -> OP type_name CP cast_expression','cast_expression',4,'p_cast_expression','grammar.py',70),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','grammar.py',76),
  ('multiplicative_expression -> multiplicative_expression MULTIPLY cast_expression','multiplicative_expression',3,'p_multiplicative_expression','grammar.py',77),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression','grammar.py',78),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multiplicative_expression','grammar.py',79),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','grammar.py',85),
  ('additive_expression -> additive_expression ADD multiplicative_expression','additive_expression',3,'p_additive_expression','grammar.py',86),
  ('additive_expression -> additive_expression SUBTRACT multiplicative_expression','additive_expression',3,'p_additive_expression','grammar.py',87),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','grammar.py',93),
  ('shift_expression -> shift_expression LSHIFT additive_expression','shift_expression',3,'p_shift_expression','grammar.py',94),
  ('shift_expression -> shift_expression RSHIFT additive_expression','shift_expression',3,'p_shift_expression','grammar.py',95),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','grammar.py',101),
  ('relational_expression -> relational_expression LT shift_expression','relational_expression',3,'p_relational_expression','grammar.py',102),
  ('relational_expression -> relational_expression GT shift_expression','relational_expression',3,'p_relational_expression','grammar.py',103),
  ('relational_expression -> relational_expression LEQ shift_expression','relational_expression',3,'p_relational_expression','grammar.py',104),
  ('relational_expression -> relational_expression GEQ shift_expression','relational_expression',3,'p_relational_expression','grammar.py',105),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','grammar.py',111),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression','grammar.py',112),
  ('equality_expression -> equality_expression NEQ relational_expression','equality_expression',3,'p_equality_expression','grammar.py',113),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','grammar.py',119),
  ('and_expression -> and_expression B_AND equality_expression','and_expression',3,'p_and_expression','grammar.py',120),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','grammar.py',126),
  ('exclusive_or_expression -> exclusive_or_expression XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','grammar.py',127),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','grammar.py',133),
  ('inclusive_or_expression -> inclusive_or_expression B_OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','grammar.py',134),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','grammar.py',140),
  ('logical_and_expression -> logical_and_expression AND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','grammar.py',141),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','grammar.py',147),
  ('logical_or_expression -> logical_or_expression OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','grammar.py',148),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','grammar.py',154),
  ('conditional_expression -> logical_or_expression TERNARYOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','grammar.py',155),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','grammar.py',161),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','grammar.py',162),
  ('assignment_operator -> ASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',168),
  ('assignment_operator -> MULASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',169),
  ('assignment_operator -> DIVASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',170),
  ('assignment_operator -> MODASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',171),
  ('assignment_operator -> PLUSASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',172),
  ('assignment_operator -> MINUSASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',173),
  ('assignment_operator -> LSASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',174),
  ('assignment_operator -> RSASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',175),
  ('assignment_operator -> ANDASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',176),
  ('assignment_operator -> XORASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',177),
  ('assignment_operator -> ORASSIGN','assignment_operator',1,'p_assignment_operator','grammar.py',178),
  ('expression -> assignment_expression','expression',1,'p_expression','grammar.py',185),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','grammar.py',186),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','grammar.py',193),
  ('declaration -> declaration_specifiers SEMICOLON','declaration',2,'p_declaration','grammar.py',199),
  ('declaration -> declaration_specifiers init_declarator_list SEMICOLON','declaration',3,'p_declaration','grammar.py',200),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','grammar.py',206),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','grammar.py',207),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','grammar.py',208),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','grammar.py',209),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','grammar.py',210),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','grammar.py',211),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','grammar.py',217),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','grammar.py',218),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','grammar.py',224),
  ('init_declarator -> declarator ASSIGN initializer','init_declarator',3,'p_init_declarator','grammar.py',225),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','grammar.py',231),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','grammar.py',232),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','grammar.py',233),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','grammar.py',234),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','grammar.py',235),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','grammar.py',241),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','grammar.py',242),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','grammar.py',243),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','grammar.py',244),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','grammar.py',245),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','grammar.py',246),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','grammar.py',247),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','grammar.py',248),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','grammar.py',249),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','grammar.py',250),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','grammar.py',251),
  ('type_specifier -> TYPE_NAME','type_specifier',1,'p_type_specifier','grammar.py',252),
  ('struct_or_union_specifier -> struct_or_union ID OCP struct_declaration_list CCP','struct_or_union_specifier',5,'p_struct_or_union_specifier','grammar.py',258),
  ('struct_or_union_specifier -> struct_or_union OCP struct_declaration_list CCP','struct_or_union_specifier',4,'p_struct_or_union_specifier','grammar.py',259),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier','grammar.py',260),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','grammar.py',266),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','grammar.py',267),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','grammar.py',273),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','grammar.py',274),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON','struct_declaration',3,'p_struct_declaration','grammar.py',280),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','grammar.py',286),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','grammar.py',287),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','grammar.py',288),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','grammar.py',289),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','grammar.py',295),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','grammar.py',296),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','grammar.py',302),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','grammar.py',303),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','grammar.py',304),
  ('enum_specifier -> ENUM OCP enumerator_list CCP','enum_specifier',4,'p_enum_specifier','grammar.py',310),
  ('enum_specifier -> ENUM ID OCP enumerator_list CCP','enum_specifier',5,'p_enum_specifier','grammar.py',311),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier','grammar.py',312),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','grammar.py',318),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','grammar.py',319),
  ('enumerator -> ID','enumerator',1,'p_enumerator','grammar.py',325),
  ('enumerator -> ID ASSIGN constant_expression','enumerator',3,'p_enumerator','grammar.py',326),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','grammar.py',332),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','grammar.py',333),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','grammar.py',339),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','grammar.py',340),
  ('direct_declarator -> ID','direct_declarator',1,'p_direct_declarator','grammar.py',346),
  ('direct_declarator -> OP declarator CP','direct_declarator',3,'p_direct_declarator','grammar.py',347),
  ('direct_declarator -> direct_declarator OSP constant_expression CSP','direct_declarator',4,'p_direct_declarator','grammar.py',348),
  ('direct_declarator -> direct_declarator OSP CSP','direct_declarator',3,'p_direct_declarator','grammar.py',349),
  ('direct_declarator -> direct_declarator OP parameter_type_list CP','direct_declarator',4,'p_direct_declarator','grammar.py',350),
  ('direct_declarator -> direct_declarator OP identifier_list CP','direct_declarator',4,'p_direct_declarator','grammar.py',351),
  ('direct_declarator -> direct_declarator OP CP','direct_declarator',3,'p_direct_declarator','grammar.py',352),
  ('pointer -> MULTIPLY','pointer',1,'p_pointer','grammar.py',358),
  ('pointer -> MULTIPLY type_qualifier_list','pointer',2,'p_pointer','grammar.py',359),
  ('pointer -> MULTIPLY pointer','pointer',2,'p_pointer','grammar.py',360),
  ('pointer -> MULTIPLY type_qualifier_list pointer','pointer',3,'p_pointer','grammar.py',361),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','grammar.py',367),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','grammar.py',368),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','grammar.py',374),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','grammar.py',375),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','grammar.py',381),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','grammar.py',382),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','grammar.py',388),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','grammar.py',389),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','grammar.py',390),
  ('identifier_list -> ID','identifier_list',1,'p_identifier_list','grammar.py',396),
  ('identifier_list -> identifier_list COMMA ID','identifier_list',3,'p_identifier_list','grammar.py',397),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','grammar.py',403),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','grammar.py',404),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','grammar.py',410),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','grammar.py',411),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','grammar.py',412),
  ('direct_abstract_declarator -> OP abstract_declarator CP','direct_abstract_declarator',3,'p_direct_abstract_declarator','grammar.py',418),
  ('direct_abstract_declarator -> OSP CSP','direct_abstract_declarator',2,'p_direct_abstract_declarator','grammar.py',419),
  ('direct_abstract_declarator -> OSP constant_expression CSP','direct_abstract_declarator',3,'p_direct_abstract_declarator','grammar.py',420),
  ('direct_abstract_declarator -> direct_abstract_declarator OSP CSP','direct_abstract_declarator',3,'p_direct_abstract_declarator','grammar.py',421),
  ('direct_abstract_declarator -> direct_abstract_declarator OSP constant_expression CSP','direct_abstract_declarator',4,'p_direct_abstract_declarator','grammar.py',422),
  ('direct_abstract_declarator -> OP CP','direct_abstract_declarator',2,'p_direct_abstract_declarator','grammar.py',423),
  ('direct_abstract_declarator -> OP parameter_type_list CP','direct_abstract_declarator',3,'p_direct_abstract_declarator','grammar.py',424),
  ('direct_abstract_declarator -> direct_abstract_declarator OP CP','direct_abstract_declarator',3,'p_direct_abstract_declarator','grammar.py',425),
  ('direct_abstract_declarator -> direct_abstract_declarator OP parameter_type_list CP','direct_abstract_declarator',4,'p_direct_abstract_declarator','grammar.py',426),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','grammar.py',432),
  ('initializer -> OCP initializer_list CCP','initializer',3,'p_initializer','grammar.py',433),
  ('initializer -> OCP initializer_list COMMA CSP','initializer',4,'p_initializer','grammar.py',434),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','grammar.py',440),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','grammar.py',441),
  ('statement -> labeled_statement','statement',1,'p_statement','grammar.py',447),
  ('statement -> compound_statement','statement',1,'p_statement','grammar.py',448),
  ('statement -> expression_statement','statement',1,'p_statement','grammar.py',449),
  ('statement -> selection_statement','statement',1,'p_statement','grammar.py',450),
  ('statement -> iteration_statement','statement',1,'p_statement','grammar.py',451),
  ('statement -> jump_statement','statement',1,'p_statement','grammar.py',452),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement','grammar.py',458),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','grammar.py',459),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','grammar.py',460),
  ('compound_statement -> OCP CCP','compound_statement',2,'p_compound_statement','grammar.py',466),
  ('compound_statement -> OCP statement_list CCP','compound_statement',3,'p_compound_statement','grammar.py',467),
  ('compound_statement -> OCP declaration_list CCP','compound_statement',3,'p_compound_statement','grammar.py',468),
  ('compound_statement -> OCP declaration_list statement_list CCP','compound_statement',4,'p_compound_statement','grammar.py',469),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','grammar.py',475),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','grammar.py',476),
  ('statement_list -> statement','statement_list',1,'p_statement_list','grammar.py',482),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','grammar.py',483),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','grammar.py',489),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','grammar.py',490),
  ('selection_statement -> IF OP expression CP statement','selection_statement',5,'p_selection_statement','grammar.py',496),
  ('selection_statement -> IF OP expression CP statement ELSE statement','selection_statement',7,'p_selection_statement','grammar.py',497),
  ('selection_statement -> SWITCH OP expression CP statement','selection_statement',5,'p_selection_statement','grammar.py',498),
  ('iteration_statement -> WHILE OP expression CP statement','iteration_statement',5,'p_iteration_statement','grammar.py',508),
  ('iteration_statement -> DO statement WHILE OP expression CP SEMICOLON','iteration_statement',7,'p_iteration_statement','grammar.py',509),
  ('iteration_statement -> FOR OP expression_statement expression_statement CP statement','iteration_statement',6,'p_iteration_statement','grammar.py',510),
  ('iteration_statement -> FOR OP expression_statement expression_statement expression CP statement','iteration_statement',7,'p_iteration_statement','grammar.py',511),
  ('jump_statement -> GOTO ID SEMICOLON','jump_statement',3,'p_jump_statement','grammar.py',526),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','grammar.py',527),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','grammar.py',528),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','grammar.py',529),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','grammar.py',530),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','grammar.py',536),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','grammar.py',537),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','grammar.py',543),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','grammar.py',544),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','grammar.py',550),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','grammar.py',551),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','grammar.py',552),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','grammar.py',553),
]
